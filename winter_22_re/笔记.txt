1、在python中使用正则表达式：
	转义符
	'\(' 表示匹配小括号
	[()+*?/$.] 在字符组中一些特殊的字符会出现原形
	所有\w \d \s \W \D \S 都表示它的原本的意义
	[-]在首位表示普通减号，写在其他表示范围
	
2、re模块方法：
	匹配
		findall # 会优先显示分组中的内容，要想取消分组优先，(?:正则表达式)
		search # 如果search中有分组的话，通过group(n)可以获取group中的匹配内容
		match
	替换
		sub
	切割
		split # 遇到分组，会保留分组内被切掉的内容
	进阶方法 - 爬虫/自动化开发
		compile  时间效率
		finditer  空间效率
		
3、正则表达式进阶：
	分组命名（推荐）
	(?P<name>正则表达式) 表示给分组起名字
	(?P=name) 表示使用这个分组，这里匹配到的内容应该和分组的内容完全相同
	通过索引使用分组
	\1
	
作业：
实现能计算类似 
1 - 2 * ( (60-30 +(-40/5) * (9-2*5/3 + 7 /3*99/4*2998 +10 * 568/14 )) - (-4*3)/ (16-3*2) )等类似公式的计算器程序
	
（1）去空格
（2）匹配最内层小括号
（3）先乘除，后加减
（4）	
	