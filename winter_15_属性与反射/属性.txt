属性：将一个方法伪装成一个属性，代码上没有提升，只是更合理

property应用于看似是名词，实际要计算的方法，把方法伪装成名词

类方法：通过类名调用的方法，类方法中第一个参数约定俗成为cls,python自动将类名（类空间）传给cls

类方法应用：
1、类中有些方法不需要对象参与
class A:
    name = 'jia'
    count = 1
    @classmethod
    def func1(cls): # 此方法无需对象参与
        return cls.name + str(cls.count+8)

print(A.func1())

a1 = A()
print(a1.func1())

2、对类中的静态变量进行改变

class A:
    count = 13
    @classmethod
    def func1(cls): # 此方法无需对象参与
        print(cls)
        print(cls.count)
        #对B中所有内容都可以进行修改
class B(A):
    count = 99
A.func1()
B.func1()
3、继承中，父类得到子类的类空间，为所以为


静态方法：
1、代码块清晰
2、高复用性